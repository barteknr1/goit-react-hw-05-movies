{"version":3,"file":"static/js/168.5f99aa55.chunk.js","mappings":"sPACA,EAA6B,4BAA7B,EAAsE,4BAAtE,EAAiH,8B,SCsCjH,EAjCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,6GAEyBC,EAAAA,EAAAA,gBAAoBH,GAF7C,OAESF,EAFT,OAGGC,EAAWD,GAHd,gDAMGM,QAAQC,IAAR,MANH,wDAAD,EASD,GAAE,CAACL,KAEF,yBACGF,GACC,eAAIQ,UAAWC,EAAf,SACGT,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACX,gBAAaL,UAAWC,EAAxB,WACE,eAAGD,UAAWC,EAAd,qBAAyCE,MACzC,uBAAIE,MAFGD,EADE,OAQf,cAAGJ,UAAU,eAAb,yBAIP,C,8DCnCKM,EAAU,mCACVC,EAAW,+BAEXC,EAAiB,mCAAG,6GAEKC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CAC/DG,OAAQ,CACJC,QAASL,KAJC,cAEZM,EAFY,gBAOLA,EAASC,KAAKC,QAPT,wEAUlBhB,QAAQC,IAAR,MAVkB,yDAAH,qDAcjBgB,EAAY,mCAAG,WAAOX,GAAP,gGAEUK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BH,GAAM,CACxDM,OAAQ,CACJC,QAASL,KAJJ,cAEPM,EAFO,gBAOAA,EAASC,KAPT,wEAUbf,QAAQC,IAAR,MAVa,yDAAH,sDAcZiB,EAAY,mCAAG,WAAOZ,GAAP,gGAEUK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BH,EAA/B,YAA6C,CAChEM,OAAQ,CACJC,QAASL,KAJJ,cAEPM,EAFO,gBAOAA,EAASC,KAPT,wEAUbf,QAAQC,IAAR,MAVa,yDAAH,sDAcZkB,EAAe,mCAAG,WAAOb,GAAP,gGAEOK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BH,EAA/B,mBAAoD,CACvEM,OAAQ,CACJC,QAASL,KAJD,cAEVM,EAFU,gBAOHA,EAASC,KAAKC,QAPX,wEAUhBhB,QAAQC,IAAR,MAVgB,yDAAH,sDAcfmB,EAAgB,mCAAG,WAAOC,GAAP,gGAEMV,EAAAA,EAAAA,IAAA,UAAaF,EAAb,yBAA8C,CACjEG,OAAQ,CACJS,MAAOA,EACPR,QAASL,KALA,cAEXM,EAFW,gBAQJA,EAASC,KAAKC,QARV,wEAWjBhB,QAAQC,IAAR,MAXiB,yDAAH,sDAehBF,EAAM,CAAEW,kBAAAA,EAAmBO,aAAAA,EAAcC,aAAAA,EAAcC,gBAAAA,EAAiBC,iBAAAA,GAC9E,K","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","utils/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"Reviews_reviewList__uMBar\",\"reviewItem\":\"Reviews_reviewItem__ax7Fo\",\"reviewAuthor\":\"Reviews_reviewAuthor__f4lkL\"};","import React from 'react'\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'utils/getMovies';\nimport css from './Reviews.module.css'\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([])\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const reviews = await api.getMovieReviews(movieId);\n        setReviews(reviews);\n      }\n      catch (err) {\n        console.log(err)\n      }\n    })();\n  }, [movieId])\n  return (\n    <div>\n      {reviews ? (\n        <ul className={css.reviewList}>\n          {reviews.map(({ author, id, content }) => (\n            <li key={id} className={css.reviewItem}>\n              <p className={css.reviewAuthor}>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"nothingFound\">No reviews</p>\n      )}\n    </div>\n  )\n}\n\nexport default Reviews","import axios from \"axios\";\n\nconst API_KEY = 'ab8de7f6cd80f554f73acd2ad893d2dd';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data.results\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMovieById = async (id) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMovieCast = async (id) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMovieReviews = async (id) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?page=1`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data.results\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMoviesByQuery = async (query) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie?&page=1`, {\n            params: {\n                query: query,\n                api_key: API_KEY,\n            }\n        })\n        return await response.data.results\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst api = { getTrendingMovies, getMovieById, getMovieCast, getMovieReviews, getMoviesByQuery };\nexport default api\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","api","console","log","className","css","map","author","id","content","API_KEY","BASE_URL","getTrendingMovies","axios","params","api_key","response","data","results","getMovieById","getMovieCast","getMovieReviews","getMoviesByQuery","query"],"sourceRoot":""}