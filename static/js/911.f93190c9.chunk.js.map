{"version":3,"file":"static/js/911.f93190c9.chunk.js","mappings":"oOACA,EAAyB,uBAAzB,EAA6D,2BAA7D,EAA0G,gCAA1G,EAA6J,iCAA7J,EAA8M,8BAA9M,EAAyP,2B,0BCmEzP,EA9De,WACb,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAoBA,OACE,kBAAMC,UAAWC,EAAjB,WACE,kBACED,UAAWC,EACXC,SAjBe,SAACC,GACpBA,EAAEC,kBACF,iBAAC,6GAE+BC,EAAAA,EAAAA,iBAAqBT,GAFpD,OAESU,EAFT,OAGGP,EAAUO,GAHb,gDAMGC,QAAQC,IAAR,MANH,wDAAD,EASD,EAIG,WAIE,kBACEC,KAAK,OACLC,SA1Ba,SAACP,GACpBA,EAAEC,iBACFP,EAASM,EAAEQ,OAAOC,MACnB,EAwBOA,MAAOhB,EACPI,UAAWC,EACXY,WAAS,EACTC,aAAa,MACbC,YAAY,gBACZC,UAAQ,KAEV,mBACEP,KAAK,SACLT,UAAWC,QAGf,gBAAKD,UAAWC,EAAhB,SACGH,EAAOmB,OAAS,GACf,eAAIjB,UAAWC,EAAf,SACGH,EAAOoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBAEE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAArB,SAA4BC,KADvBD,EAFG,OAQd,eAAInB,UAAU,eAAd,+BAKT,C,8DC/DKsB,EAAU,mCACVC,EAAW,+BAEXC,EAAiB,mCAAG,6GAEKC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CAC/DG,OAAQ,CACJC,QAASL,KAJC,cAEZM,EAFY,gBAOLA,EAASC,KAAKC,QAPT,wEAUlBvB,QAAQC,IAAR,MAVkB,yDAAH,qDAcjBuB,EAAY,mCAAG,WAAOZ,GAAP,gGAEUM,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BJ,GAAM,CACxDO,OAAQ,CACJC,QAASL,KAJJ,cAEPM,EAFO,gBAOAA,EAASC,KAPT,wEAUbtB,QAAQC,IAAR,MAVa,yDAAH,sDAcZwB,EAAY,mCAAG,WAAOb,GAAP,gGAEUM,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BJ,EAA/B,YAA6C,CAChEO,OAAQ,CACJC,QAASL,KAJJ,cAEPM,EAFO,gBAOAA,EAASC,KAPT,wEAUbtB,QAAQC,IAAR,MAVa,yDAAH,sDAcZyB,EAAe,mCAAG,WAAOd,GAAP,gGAEOM,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BJ,EAA/B,mBAAoD,CACvEO,OAAQ,CACJC,QAASL,KAJD,cAEVM,EAFU,gBAOHA,EAASC,KAAKC,QAPX,wEAUhBvB,QAAQC,IAAR,MAVgB,yDAAH,sDAcf0B,EAAgB,mCAAG,WAAOtC,GAAP,gGAEM6B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,yBAA8C,CACjEG,OAAQ,CACJ9B,MAAOA,EACP+B,QAASL,KALA,cAEXM,EAFW,gBAQJA,EAASC,KAAKC,QARV,wEAWjBvB,QAAQC,IAAR,MAXiB,yDAAH,sDAehBH,EAAM,CAAEmB,kBAAAA,EAAmBO,aAAAA,EAAcC,aAAAA,EAAcC,gBAAAA,EAAiBC,iBAAAA,GAC9E,K","sources":["webpack://react-homework-template/./src/Pages/Movies/Movies.module.css?d262","Pages/Movies/Movies.jsx","utils/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"Movies_movies__4BwUZ\",\"searchForm\":\"Movies_searchForm__RNsYl\",\"searchFormInput\":\"Movies_searchFormInput__s5aLC\",\"searchFormButton\":\"Movies_searchFormButton__aH+Xv\",\"moviesWrapper\":\"Movies_moviesWrapper__2JOW8\",\"moviesList\":\"Movies_moviesList__hkkZP\"};","import React from 'react';\nimport css from './Movies.module.css'\nimport { useState } from 'react';\nimport api from 'utils/getMovies';\nimport { Link } from 'react-router-dom';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([])\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setQuery(e.target.value);\n  }\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    (async () => {\n      try {\n        const moviesByQuery = await api.getMoviesByQuery(query);\n        setMovies(moviesByQuery);\n      }\n      catch (err) {\n        console.log(err)\n      }\n    })();\n  }\n\n  return (\n    <main className={css.movies}>\n      <form\n        className={css.searchForm}\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"text\"\n          onChange={handleChange}\n          value={query}\n          className={css.searchFormInput}\n          autoFocus\n          autoComplete=\"off\"\n          placeholder=\"Search movies\"\n          required\n        />\n        <button\n          type=\"submit\"\n          className={css.searchFormButton}\n        />\n      </form>\n      <div className={css.moviesWrapper}>\n        {movies.length > 0 ? (\n          <ul className={css.moviesList}>\n            {movies.map(({ id, title }) =>\n              <li\n                key={id}>\n                <Link to={`/movies/${id}`}>{title}</Link>\n              </li>\n            )}\n          </ul>\n        ) : (\n          <h4 className=\"nothingFound\">Nothing found</h4>\n        )}\n      </div>\n    </main>\n  )\n};\n\n\nexport default Movies","import axios from \"axios\";\n\nconst API_KEY = 'ab8de7f6cd80f554f73acd2ad893d2dd';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data.results\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMovieById = async (id) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMovieCast = async (id) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMovieReviews = async (id) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?page=1`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data.results\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMoviesByQuery = async (query) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie?&page=1`, {\n            params: {\n                query: query,\n                api_key: API_KEY,\n            }\n        })\n        return await response.data.results\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst api = { getTrendingMovies, getMovieById, getMovieCast, getMovieReviews, getMoviesByQuery };\nexport default api\n"],"names":["useState","query","setQuery","movies","setMovies","className","css","onSubmit","e","preventDefault","api","moviesByQuery","console","log","type","onChange","target","value","autoFocus","autoComplete","placeholder","required","length","map","id","title","to","API_KEY","BASE_URL","getTrendingMovies","axios","params","api_key","response","data","results","getMovieById","getMovieCast","getMovieReviews","getMoviesByQuery"],"sourceRoot":""}