{"version":3,"file":"static/js/911.43d6f8e0.chunk.js","mappings":"oOACA,EAAyB,uBAAzB,EAA6D,2BAA7D,EAA0G,gCAA1G,EAA6J,iCAA7J,EAA8M,8BAA9M,EAAyP,2B,mCCgEzP,EA3De,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACM,KAAVJ,IACJ,iBAAC,oGAC6BK,EAAAA,EAAAA,iBAAqBL,GADlD,OACOM,EADP,OAECV,EAAUU,GAFX,0CAAD,EAID,GAAE,CAACN,IAQJ,OACE,kBAAMO,UAAWC,EAAjB,WACE,kBACED,UAAWC,EACXC,SAVe,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfd,EAAgB,CAAEC,MAAOY,EAAKE,SAASd,MAAMe,OAC9C,EAIG,WAIE,kBACEC,KAAK,OACLC,KAAK,QACLV,UAAWC,EACXU,WAAS,EACTC,aAAa,MACbC,YAAY,gBACZC,UAAQ,KAEV,mBACEL,KAAK,SACLT,UAAWC,QAGf,gBAAKD,UAAWC,EAAhB,SACGb,EAAO2B,OAAS,GACf,eAAIf,UAAWC,EAAf,SACGb,EAAO4B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBAEE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAM1B,GAAzC,SAAqDuB,KADhDD,EAFG,OAQd,eAAIjB,UAAU,eAAd,+BAKT,C,8DC5DKsB,EAAU,mCACVC,EAAW,+BAEXC,EAAiB,mCAAG,6GAEKC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CAC/DG,OAAQ,CACJC,QAASL,KAJC,cAEZM,EAFY,gBAOLA,EAASC,KAAKC,QAPT,wEAUlBC,QAAQC,IAAR,MAVkB,yDAAH,qDAcjBC,EAAY,mCAAG,WAAOhB,GAAP,gGAEUQ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BN,GAAM,CACxDS,OAAQ,CACJC,QAASL,KAJJ,cAEPM,EAFO,gBAOAA,EAASC,KAPT,wEAUbE,QAAQC,IAAR,MAVa,yDAAH,sDAcZE,EAAY,mCAAG,WAAOjB,GAAP,gGAEUQ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BN,EAA/B,YAA6C,CAChES,OAAQ,CACJC,QAASL,KAJJ,cAEPM,EAFO,gBAOAA,EAASC,KAPT,wEAUbE,QAAQC,IAAR,MAVa,yDAAH,sDAcZG,EAAe,mCAAG,WAAOlB,GAAP,gGAEOQ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BN,EAA/B,mBAAoD,CACvES,OAAQ,CACJC,QAASL,KAJD,cAEVM,EAFU,gBAOHA,EAASC,KAAKC,QAPX,wEAUhBC,QAAQC,IAAR,MAVgB,yDAAH,sDAcfI,EAAgB,mCAAG,WAAO3C,GAAP,gGAEMgC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,yBAA8C,CACjEG,OAAQ,CACJjC,MAAOA,EACPkC,QAASL,KALA,cAEXM,EAFW,gBAQJA,EAASC,KAAKC,QARV,wEAWjBC,QAAQC,IAAR,MAXiB,yDAAH,sDAehBlC,EAAM,CAAE0B,kBAAAA,EAAmBS,aAAAA,EAAcC,aAAAA,EAAcC,gBAAAA,EAAiBC,iBAAAA,GAC9E,K","sources":["webpack://react-homework-template/./src/Pages/Movies/Movies.module.css?d262","Pages/Movies/Movies.jsx","utils/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"Movies_movies__4BwUZ\",\"searchForm\":\"Movies_searchForm__RNsYl\",\"searchFormInput\":\"Movies_searchFormInput__s5aLC\",\"searchFormButton\":\"Movies_searchFormButton__aH+Xv\",\"moviesWrapper\":\"Movies_moviesWrapper__2JOW8\",\"moviesList\":\"Movies_moviesList__hkkZP\"};","import React from 'react';\nimport css from './Movies.module.css'\nimport { useState, useEffect } from 'react';\nimport api from 'utils/getMovies';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\") ?? \"\";\n  const location = useLocation();\n  \n  useEffect(() => {\n    if (query === \"\") return;\n    (async () => {\n      const moviesByQuery = await api.getMoviesByQuery(query);\n      setMovies(moviesByQuery);\n    })()\n  }, [query])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value })\n  }\n\n  return (\n    <main className={css.movies}>\n      <form\n        className={css.searchForm}\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"text\"\n          name=\"query\"\n          className={css.searchFormInput}\n          autoFocus\n          autoComplete=\"off\"\n          placeholder=\"Search movies\"\n          required\n        />\n        <button\n          type=\"submit\"\n          className={css.searchFormButton}\n        />\n      </form>\n      <div className={css.moviesWrapper}>\n        {movies.length > 0 ? (\n          <ul className={css.moviesList}>\n            {movies.map(({ id, title }) =>\n              <li\n                key={id}>\n                <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n              </li>\n            )}\n          </ul>\n        ) : (\n          <h4 className=\"nothingFound\">Nothing found</h4>\n        )}\n      </div>\n    </main>\n  )\n};\n\n\nexport default Movies","import axios from \"axios\";\n\nconst API_KEY = 'ab8de7f6cd80f554f73acd2ad893d2dd';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data.results\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMovieById = async (id) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMovieCast = async (id) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMovieReviews = async (id) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?page=1`, {\n            params: {\n                api_key: API_KEY,\n            }\n        })\n        return await response.data.results\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst getMoviesByQuery = async (query) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie?&page=1`, {\n            params: {\n                query: query,\n                api_key: API_KEY,\n            }\n        })\n        return await response.data.results\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nconst api = { getTrendingMovies, getMovieById, getMovieCast, getMovieReviews, getMoviesByQuery };\nexport default api\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","api","moviesByQuery","className","css","onSubmit","e","preventDefault","form","currentTarget","elements","value","type","name","autoFocus","autoComplete","placeholder","required","length","map","id","title","to","state","from","API_KEY","BASE_URL","getTrendingMovies","axios","params","api_key","response","data","results","console","log","getMovieById","getMovieCast","getMovieReviews","getMoviesByQuery"],"sourceRoot":""}